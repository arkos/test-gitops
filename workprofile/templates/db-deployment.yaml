# templates/db-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "workprofile.labels" . | nindent 4 }} # Inherit common labels
    app.kubernetes.io/component: database # Specific component label
    app.kubernetes.io/name: {{ include "workprofile.fullname" . }}-db # Specific name label for this resource
  name: {{ include "workprofile.fullname" . }}-db # Unique name for the database deployment
spec:
  replicas: {{ .Values.db.replicaCount }} # Make replica count configurable for DB
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "workprofile.fullname" . }}-db # Match the specific name label
  strategy: {} # You might want to make this configurable too if needed
  template:
    metadata:
      labels:
        {{- include "workprofile.labels" . | nindent 8 }} # Inherit common labels
        app.kubernetes.io/component: database
        app.kubernetes.io/name: {{ include "workprofile.fullname" . }}-db
    spec:
      containers:
      - name: {{ .Values.db.containerName }} # Configurable container name, e.g., "mysql"
        image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag | default .Chart.AppVersion }}" # Image configurable
        imagePullPolicy: {{ .Values.db.image.pullPolicy | default "IfNotPresent" }} # Configurable pull policy
        resources:
          {{- toYaml .Values.db.resources | nindent 10 }} # Make resources configurable
        ports:
        - containerPort: {{ .Values.db.service.port }} # Make port configurable for DB
          name: {{ .Values.db.service.name }} # Make port name configurable, e.g., "mysql"
          protocol: TCP # Always good to specify protocol
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: {{ include "workprofile.fullname" . }}-storage # Reference templated PVC name
        - mountPath: /docker-entrypoint-initdb.d/init.sql
          name: {{ include "workprofile.fullname" . }}-initdb # Reference templated ConfigMap name
          subPath: init.sql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "workprofile.fullname" . }}-secret
              key: ROOT_DB_PASSWORD 
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "workprofile.fullname" . }}-secret
              key: DB_PASS 
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: {{ include "workprofile.fullname" . }}-config
              key: DB_NAME 
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: {{ include "workprofile.fullname" . }}-config
              key: DB_USER
      volumes:
      - name: {{ include "workprofile.fullname" . }}-storage
        persistentVolumeClaim:
          claimName: {{ include "workprofile.fullname" . }}-storage # Reference templated PVC name (from pvc.yaml)
      - name: {{ include "workprofile.fullname" . }}-initdb
        configMap:
          name: {{ include "workprofile.fullname" . }}-initdb # Reference templated ConfigMap name (from db-init-cm.yaml)
      {{- with .Values.db.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.db.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.db.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}